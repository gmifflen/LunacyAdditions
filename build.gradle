plugins {
  id 'eclipse'
  id 'maven-publish'
  id 'net.minecraftforge.gradle' version '5.1.+'
  id 'org.parchmentmc.librarian.forgegradle' version '1.+'
}

version = '0.0.1-1.19.2'
group = 'ca.gmifflen.lunacyadditions'
archivesBaseName = 'lunacyadditions'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"
minecraft {
//  mappings channel: 'official', version: '1.19.2'
  mappings channel: 'parchment', version: '2022.11.27-1.19.2'
  runs {
    client {
      workingDirectory project.file('run')
      property 'forge.logging.markers', 'REGISTRIES'
      property 'forge.logging.console.level', 'debug'
      property 'forge.enabledGameTestNamespaces', 'lunacyadditions'
      property 'mixin.env.remapRefMap', 'true'
      property 'mixin.env.refMapRemappingFile', "${buildDir}/createSrgToMcp/output.srg"
      mods {
        lunacyadditions {
          source sourceSets.main

        }

      }

    }

    server {
      workingDirectory project.file('run')
      property 'forge.logging.markers', 'REGISTRIES'
      property 'forge.logging.console.level', 'debug'
      property 'forge.enabledGameTestNamespaces', 'lunacyadditions'
      property 'mixin.env.remapRefMap', 'true'
      property 'mixin.env.refMapRemappingFile', "${buildDir}/createSrgToMcp/output.srg"
      mods {
        lunacyadditions {
          source sourceSets.main

        }

      }

    }

    gameTestServer {
      workingDirectory project.file('run')
      property 'forge.logging.markers', 'REGISTRIES'
      property 'forge.logging.console.level', 'debug'
      property 'forge.enabledGameTestNamespaces', 'lunacyadditions'
      property 'mixin.env.remapRefMap', 'true'
      property 'mixin.env.refMapRemappingFile', "${buildDir}/createSrgToMcp/output.srg"
      mods {
        lunacyadditions {
          source sourceSets.main

        }

      }

    }

    data {
      workingDirectory project.file('run')
      property 'forge.logging.markers', 'REGISTRIES'
      property 'forge.logging.console.level', 'debug'
      property 'mixin.env.remapRefMap', 'true'
      property 'mixin.env.refMapRemappingFile', "${buildDir}/createSrgToMcp/output.srg"
      args '--mod', 'lunacyadditions', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
      mods {
        lunacyadditions {
          source sourceSets.main

        }

      }

    }

  }

}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
  maven {
    url "https://cursemaven.com"
    content {
      includeGroup "curse.maven"
    }
  }
}

dependencies {
  minecraft 'net.minecraftforge:forge:1.19.2-43.3.0'
  implementation fg.deobf("curse.maven:embeddium-908741:5034476")
  implementation fg.deobf("curse.maven:canary-665658:5042386")
  implementation fg.deobf("curse.maven:saturn-670986:5020331")
  implementation fg.deobf("curse.maven:pluto-682881:4469704")
  implementation fg.deobf("curse.maven:smooth-boot-reloaded-633412:5016277")

}


jar {
  manifest {
    attributes([
        "Specification-Title"     : "lunacyadditions",
        "Specification-Vendor"    : "lunacyadditionssareus",
        "Specification-Version"   : "1",
        "Implementation-Title"    : project.name,
        "Implementation-Version"  : project.jar.archiveVersion,
        "Implementation-Vendor"   : "lunacyadditionssareus",
        "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")

    ])

  }

}

jar.finalizedBy('reobfJar')

publishing {
  publications {
    mavenJava(MavenPublication) {
      artifact jar

    }

  }
  repositories {
    maven {
      url "file://${project.projectDir}/mcmodsrepo"

    }

  }

}

tasks.withType(JavaCompile).configureEach {
  options.encoding = 'UTF-8'

}
